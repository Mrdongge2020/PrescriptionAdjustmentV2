// <auto-generated />
using System;
using AdjustmentSys.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdjustmentSys.EFCore.Migrations
{
    [DbContext(typeof(EFCoreContext))]
    partial class EFCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdjustmentSys.Entity.DataPrescription", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BackupField1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BackupField1")
                        .HasComment("预留字段1");

                    b.Property<string>("BackupField2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BackupField2")
                        .HasComment("预留字段1");

                    b.Property<string>("BackupField3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BackupField3")
                        .HasComment("预留字段1");

                    b.Property<string>("CreateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateName")
                        .HasComment("处方创建人");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime")
                        .HasComment("处方创建时间");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DepartmentName")
                        .HasComment("科室");

                    b.Property<int>("DetailedCount")
                        .HasColumnType("int")
                        .HasColumnName("DetailedCount")
                        .HasComment("处方明细条数");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DoctorName")
                        .HasComment("开方医生");

                    b.Property<DateTime>("ImportTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ImportTime")
                        .HasComment("导入时间");

                    b.Property<int?>("PatientAge")
                        .HasColumnType("int")
                        .HasColumnName("PatientAge")
                        .HasComment("患者年龄");

                    b.Property<int?>("PatientBirthDay")
                        .HasColumnType("int")
                        .HasColumnName("PatientBirthDay")
                        .HasComment("出生日期");

                    b.Property<int?>("PatientBirthMonth")
                        .HasColumnType("int")
                        .HasColumnName("PatientBirthMonth")
                        .HasComment("出生月份");

                    b.Property<string>("PatientEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PatientEmail")
                        .HasComment("患者邮件");

                    b.Property<string>("PatientLocation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PatientLocation")
                        .HasComment("患者的位置信息");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PatientName")
                        .HasComment("患者姓名");

                    b.Property<int>("PatientSex")
                        .HasColumnType("int")
                        .HasColumnName("PatientSex")
                        .HasComment("患者性别");

                    b.Property<string>("PatientTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PatientTel")
                        .HasComment("患者联系方式");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PaymentStatus")
                        .HasComment("缴费状态");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PaymentType")
                        .HasComment("处方缴费类型");

                    b.Property<string>("PrescriptionID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PrescriptionID")
                        .HasComment("处方编号");

                    b.Property<string>("PrescriptionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PrescriptionName")
                        .HasComment("协定处方名称");

                    b.Property<int>("PrescriptionSource")
                        .HasColumnType("int")
                        .HasColumnName("PrescriptionSource")
                        .HasComment("处方来源");

                    b.Property<string>("PrescriptionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PrescriptionType")
                        .HasComment("处方类型，住院或门诊");

                    b.Property<int>("ProcessStatus")
                        .HasColumnType("int")
                        .HasColumnName("ProcessStatus")
                        .HasComment("处方状态");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity")
                        .HasComment("处方付数");

                    b.Property<string>("RegisterID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RegisterID")
                        .HasComment("挂单号");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Remarks")
                        .HasComment("Remarks");

                    b.Property<int>("TaskFrequency")
                        .HasColumnType("int")
                        .HasColumnName("TaskFrequency")
                        .HasComment("分服次数");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalPrice")
                        .HasComment("处方总价");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UnitPrice")
                        .HasComment("单付单价");

                    b.Property<string>("UsageMethod")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("UsageMethod")
                        .HasComment("处方使用方式");

                    b.Property<DateTime>("ValuationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ValuationTime")
                        .HasComment("划价时间");

                    b.Property<string>("ValueSn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ValueSn")
                        .HasComment("划价单号");

                    b.Property<string>("ValuerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ValuerName")
                        .HasComment("划价员");

                    b.HasKey("ID");

                    b.ToTable("DataPrescription", t =>
                        {
                            t.HasComment("本地处方表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.DataPrescriptionDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BatchNumber")
                        .HasComment("颗粒批号");

                    b.Property<float>("Dose")
                        .HasColumnType("real")
                        .HasColumnName("Dose")
                        .HasComment("颗粒剂量");

                    b.Property<float>("DoseHerb")
                        .HasColumnType("real")
                        .HasColumnName("DoseHerb")
                        .HasComment("颗粒饮片剂量");

                    b.Property<float>("Equivalent")
                        .HasColumnType("real")
                        .HasColumnName("Equivalent")
                        .HasComment("颗粒当量");

                    b.Property<int>("ParticleOrder")
                        .HasColumnType("int")
                        .HasColumnName("ParticleOrder")
                        .HasComment("颗粒序号");

                    b.Property<string>("ParticlesCodeHIS")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ParticlesCodeHIS")
                        .HasComment("颗粒HIS码");

                    b.Property<int>("ParticlesID")
                        .HasColumnType("int")
                        .HasColumnName("ParticlesID")
                        .HasComment("我库颗粒编号，默认-1");

                    b.Property<string>("ParticlesName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ParticlesName")
                        .HasComment("HIS颗粒名称");

                    b.Property<string>("PrescriptionID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PrescriptionID")
                        .HasComment("处方唯一编号");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price")
                        .HasComment("药品单价");

                    b.HasKey("ID");

                    b.ToTable("DataPrescriptionDetail", t =>
                        {
                            t.HasComment("本地处方详情表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.DepartmentInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Address")
                        .HasComment("科室地址");

                    b.Property<string>("Contacts")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Contacts")
                        .HasComment("科室联系人");

                    b.Property<string>("ContactsPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContactsPhone")
                        .HasComment("科室联系人电话");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("CreateBy")
                        .HasComment("创建人");

                    b.Property<string>("CreateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CreateName")
                        .HasComment("创建人名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime")
                        .HasComment("创建时间");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DepartmentName")
                        .HasComment("科室名称");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdateBy")
                        .HasComment("更新人");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UpdateName")
                        .HasComment("更新人名称");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime")
                        .HasComment("更新时间");

                    b.HasKey("ID");

                    b.ToTable("DepartmentInfo", t =>
                        {
                            t.HasComment("科室信息表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.DeviceInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("CreateBy")
                        .HasComment("创建人");

                    b.Property<string>("CreateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CreateName")
                        .HasComment("创建人名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime")
                        .HasComment("创建时间");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DeviceCode")
                        .HasComment("设备编组");

                    b.Property<int>("DeviceType")
                        .HasColumnType("int")
                        .HasColumnName("DeviceType")
                        .HasComment("设备类型");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IPAddress")
                        .HasComment("IP地址");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Name")
                        .HasComment("名称");

                    b.HasKey("ID");

                    b.ToTable("DeviceInfo", t =>
                        {
                            t.HasComment("设备信息表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.DeviceMedicineCabinetCodeRelation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int")
                        .HasColumnName("MedicineCabinetId")
                        .HasComment("药柜id");

                    b.Property<string>("MedicineCabinetCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MedicineCabinetCode")
                        .HasComment("药柜组code编号");

                    b.HasKey("ID");

                    b.ToTable("DeviceMedicineCabinetRelation", t =>
                        {
                            t.HasComment("设备和药柜组关联信息表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.DoctorInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("CreateBy")
                        .HasComment("创建人");

                    b.Property<string>("CreateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CreateName")
                        .HasComment("创建人名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime")
                        .HasComment("创建时间");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int")
                        .HasColumnName("DeleteBy")
                        .HasComment("删除人");

                    b.Property<string>("DeleteName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DeleteName")
                        .HasComment("删除人名称");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteTime")
                        .HasComment("删除时间");

                    b.Property<int?>("DoctorDepartmentID")
                        .HasColumnType("int")
                        .HasColumnName("DoctorDepartmentID")
                        .HasComment("医生所属科室id");

                    b.Property<string>("DoctorDepartmentName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DoctorDepartmentName")
                        .HasComment("医生所属科室名称");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DoctorName")
                        .HasComment("医生名称");

                    b.Property<string>("EMail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMail")
                        .HasComment("医生Email");

                    b.Property<string>("InitialPinyin")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("InitialPinyin")
                        .HasComment("医生名称首字母简称");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("IsDelete")
                        .HasComment("是否删除");

                    b.Property<string>("Office")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Office")
                        .HasComment("医生办公室");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone")
                        .HasComment("医生电话");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdateBy")
                        .HasComment("更新人");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UpdateName")
                        .HasComment("更新人名称");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime")
                        .HasComment("更新时间");

                    b.HasKey("ID");

                    b.ToTable("DoctorInfo", t =>
                        {
                            t.HasComment("医生信息表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.LevelInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LevelName")
                        .HasComment("等级名称");

                    b.HasKey("ID");

                    b.ToTable("LevelInfo", t =>
                        {
                            t.HasComment("权限等级表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.ManufacturerInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("CreateBy")
                        .HasComment("创建人");

                    b.Property<string>("CreateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CreateName")
                        .HasComment("创建人名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime")
                        .HasComment("创建时间");

                    b.Property<int?>("DeleteBy")
                        .HasColumnType("int")
                        .HasColumnName("DeleteBy")
                        .HasComment("删除人");

                    b.Property<string>("DeleteName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DeleteName")
                        .HasComment("删除人名称");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeleteTime")
                        .HasComment("删除时间");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("IsDelete")
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name")
                        .HasComment("厂家名称");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort")
                        .HasComment("序号");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdateBy")
                        .HasComment("更新人");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UpdateName")
                        .HasComment("更新人名称");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime")
                        .HasComment("更新时间");

                    b.HasKey("ID");

                    b.ToTable("ManufacturerInfo", t =>
                        {
                            t.HasComment("厂家信息表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.ManufacturerResolutionCode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BatchNumberIndex")
                        .HasColumnType("int")
                        .HasColumnName("BatchNumberIndex")
                        .HasComment("批号开始位置");

                    b.Property<int?>("BatchNumberLength")
                        .HasColumnType("int")
                        .HasColumnName("BatchNumberLength")
                        .HasComment("批号长度");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("CreateBy")
                        .HasComment("创建人");

                    b.Property<string>("CreateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CreateName")
                        .HasComment("创建人名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime")
                        .HasComment("创建时间");

                    b.Property<int>("DensityIndex")
                        .HasColumnType("int")
                        .HasColumnName("DensityIndex")
                        .HasComment("密度开始位置");

                    b.Property<int>("DensityLength")
                        .HasColumnType("int")
                        .HasColumnName("DensityLength")
                        .HasComment("密度长度");

                    b.Property<int?>("EquivalentIndex")
                        .HasColumnType("int")
                        .HasColumnName("EquivalentIndex")
                        .HasComment("当量开始位置");

                    b.Property<int?>("EquivalentLength")
                        .HasColumnType("int")
                        .HasColumnName("EquivalentLength")
                        .HasComment("当量长度");

                    b.Property<string>("ExampleCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ExampleCode")
                        .HasComment("示例code");

                    b.Property<int>("LargePackagingCodeIndex")
                        .HasColumnType("int")
                        .HasColumnName("LargePackagingCodeIndex")
                        .HasComment("大包装码开始位置");

                    b.Property<int>("LargePackagingCodeLength")
                        .HasColumnType("int")
                        .HasColumnName("LargePackagingCodeLength")
                        .HasComment("大包装码长度");

                    b.Property<int>("LoadingCapacityIndex")
                        .HasColumnType("int")
                        .HasColumnName("LoadingCapacityIndex")
                        .HasComment("装量开始位置");

                    b.Property<int>("LoadingCapacityLength")
                        .HasColumnType("int")
                        .HasColumnName("LoadingCapacityLength")
                        .HasComment("装量长度");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int")
                        .HasColumnName("ManufacturerId")
                        .HasComment("厂家id");

                    b.Property<int?>("PackagingTypeIndex")
                        .HasColumnType("int")
                        .HasColumnName("PackagingTypeIndex")
                        .HasComment("包装类型开始位置");

                    b.Property<int?>("PackagingTypeLength")
                        .HasColumnType("int")
                        .HasColumnName("PackagingTypeLength")
                        .HasComment("包装类型长度");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdateBy")
                        .HasComment("更新人");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UpdateName")
                        .HasComment("更新人名称");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime")
                        .HasComment("更新时间");

                    b.Property<int?>("ValidityPeriodIndex")
                        .HasColumnType("int")
                        .HasColumnName("ValidityPeriodIndex")
                        .HasComment("有效期开始位置");

                    b.Property<int?>("ValidityPeriodLength")
                        .HasColumnType("int")
                        .HasColumnName("ValidityPeriodLength")
                        .HasComment("有效期长度");

                    b.HasKey("ID");

                    b.ToTable("ManufacturerResolutionCode", t =>
                        {
                            t.HasComment("厂家解析码表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.MedicineCabinetDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BatchNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BatchNumber")
                        .HasComment("批号");

                    b.Property<float?>("BottleHeadAdjustAmount")
                        .HasColumnType("real")
                        .HasColumnName("BottleHeadAdjustAmount")
                        .HasComment("瓶头累计调整量");

                    b.Property<int>("CoordinateX")
                        .HasColumnType("int")
                        .HasColumnName("CoordinateX")
                        .HasComment("横坐标");

                    b.Property<int>("CoordinateY")
                        .HasColumnType("int")
                        .HasColumnName("CoordinateY")
                        .HasComment("纵坐标");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("CreateBy")
                        .HasComment("创建人");

                    b.Property<string>("CreateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CreateName")
                        .HasComment("创建人名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime")
                        .HasComment("创建时间");

                    b.Property<float?>("CurentAdjustAmount")
                        .HasColumnType("real")
                        .HasColumnName("CurentAdjustAmount")
                        .HasComment("本次调整量");

                    b.Property<float?>("Density")
                        .HasColumnType("real")
                        .HasColumnName("Density")
                        .HasComment("密度");

                    b.Property<float?>("DensityCoefficient")
                        .HasColumnType("real")
                        .HasColumnName("DensityCoefficient")
                        .HasComment("密度系数");

                    b.Property<float?>("EmptyBottleWeight")
                        .HasColumnType("real")
                        .HasColumnName("EmptyBottleWeight")
                        .HasComment("空瓶重量");

                    b.Property<float?>("LastWeightAmount")
                        .HasColumnType("real")
                        .HasColumnName("LastWeightAmount")
                        .HasComment("上次称重的重量");

                    b.Property<int>("MedicineCabinetId")
                        .HasColumnType("int")
                        .HasColumnName("MedicineCabinetId")
                        .HasComment("药柜id");

                    b.Property<int?>("ParticlesID")
                        .HasColumnType("int")
                        .HasColumnName("ParticlesID")
                        .HasComment("颗粒id");

                    b.Property<int?>("RFID")
                        .HasColumnType("int")
                        .HasColumnName("RFID")
                        .HasComment("rfd");

                    b.Property<float?>("Stock")
                        .HasColumnType("real")
                        .HasColumnName("Stock")
                        .HasComment("库存");

                    b.Property<float?>("TotalErrorAmount")
                        .HasColumnType("real")
                        .HasColumnName("TotalErrorAmount")
                        .HasComment("累计的误差量");

                    b.Property<float?>("TotalUsedAmount")
                        .HasColumnType("real")
                        .HasColumnName("TotalUsedAmount")
                        .HasComment("总共使用数量");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdateBy")
                        .HasComment("更新人");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UpdateName")
                        .HasComment("更新人名称");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime")
                        .HasComment("更新时间");

                    b.Property<DateTime?>("ValidityTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ValidityTime")
                        .HasComment("效期至");

                    b.HasKey("ID");

                    b.ToTable("MedicineCabinetDetail", t =>
                        {
                            t.HasComment("药柜详情表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.MedicineCabinetInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code")
                        .HasComment("编号");

                    b.Property<int>("ColCount")
                        .HasColumnType("int")
                        .HasColumnName("ColCount")
                        .HasComment("纵向个数");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Name")
                        .HasComment("名称");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<int>("RowCount")
                        .HasColumnType("int")
                        .HasColumnName("RowCount")
                        .HasComment("横向个数");

                    b.Property<int?>("Specifications")
                        .HasColumnType("int")
                        .HasColumnName("Specifications")
                        .HasComment("规格，1=大药柜，2=小药柜");

                    b.HasKey("ID");

                    b.ToTable("MedicineCabinetInfo", t =>
                        {
                            t.HasComment("药柜信息主表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.ParticleProhibitionRule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("CreateBy")
                        .HasComment("创建人");

                    b.Property<string>("CreateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CreateName")
                        .HasComment("创建人名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime")
                        .HasComment("创建时间");

                    b.Property<int>("FirstParticlesID")
                        .HasColumnType("int")
                        .HasColumnName("FirstParticlesID")
                        .HasComment("第一味颗粒");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name")
                        .HasComment("规则名称");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<int>("SecondParticlesID")
                        .HasColumnType("int")
                        .HasColumnName("SecondParticlesID")
                        .HasComment("第二味颗粒");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdateBy")
                        .HasComment("更新人");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UpdateName")
                        .HasComment("更新人名称");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime")
                        .HasComment("更新时间");

                    b.HasKey("ID");

                    b.ToTable("ParticleProhibitionRule", t =>
                        {
                            t.HasComment("颗粒相融规则");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.ParticlesInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code")
                        .HasComment("编号");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("CreateBy")
                        .HasComment("创建人");

                    b.Property<string>("CreateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CreateName")
                        .HasComment("创建人名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime")
                        .HasComment("创建时间");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FullName")
                        .HasComment("名称全称");

                    b.Property<string>("ListingNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ListingNumber")
                        .HasComment("上市编号");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int")
                        .HasColumnName("ManufacturerId")
                        .HasComment("厂家id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Name")
                        .HasComment("名称简称");

                    b.Property<string>("NameFullPinyin")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NameFullPinyin")
                        .HasComment("名称简称全拼");

                    b.Property<string>("NameSimplifiedPinyin")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NameSimplifiedPinyin")
                        .HasComment("名称简称首字母拼音");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdateBy")
                        .HasComment("更新人");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UpdateName")
                        .HasComment("更新人名称");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime")
                        .HasComment("更新时间");

                    b.HasKey("ID");

                    b.ToTable("ParticlesInfo", t =>
                        {
                            t.HasComment("颗粒信息表");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.ParticlesInfoExtend", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BatchNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BatchNumber")
                        .HasComment("批号");

                    b.Property<float>("Density")
                        .HasColumnType("real")
                        .HasColumnName("Density")
                        .HasComment("颗粒密度");

                    b.Property<float?>("DoseLimit")
                        .HasMaxLength(50)
                        .HasColumnType("real")
                        .HasColumnName("DoseLimit")
                        .HasComment("剂量上限");

                    b.Property<float>("Equivalent")
                        .HasColumnType("real")
                        .HasColumnName("Equivalent")
                        .HasComment("颗粒当量");

                    b.Property<string>("HisCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("HisCode")
                        .HasComment("His码");

                    b.Property<string>("HisName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("HisName")
                        .HasComment("HIS名称");

                    b.Property<string>("PackageNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PackageNumber")
                        .HasComment("大包装码");

                    b.Property<int>("ParticlesID")
                        .HasColumnType("int")
                        .HasColumnName("ParticlesID")
                        .HasComment("颗粒id");

                    b.Property<decimal?>("RetailPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("RetailPrice")
                        .HasComment("零售价");

                    b.Property<string>("VaildUntil")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("VaildUntil")
                        .HasComment("有效期至");

                    b.Property<decimal?>("WholesalePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("WholesalePrice")
                        .HasComment("批发价");

                    b.HasKey("ID");

                    b.ToTable("ParticlesInfoExtend", t =>
                        {
                            t.HasComment("颗粒详情信息");
                        });
                });

            modelBuilder.Entity("AdjustmentSys.Entity.UserInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("ID主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("CreateBy")
                        .HasComment("创建人");

                    b.Property<string>("CreateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CreateName")
                        .HasComment("创建人名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime")
                        .HasComment("创建时间");

                    b.Property<string>("Office")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Office")
                        .HasComment("办公室");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone")
                        .HasComment("联系电话");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Remark")
                        .HasComment("备注");

                    b.Property<bool>("State")
                        .HasColumnType("bit")
                        .HasColumnName("State")
                        .HasComment("账号状态：1：可用，0禁用");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdateBy")
                        .HasComment("更新人");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UpdateName")
                        .HasComment("更新人名称");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime")
                        .HasComment("更新时间");

                    b.Property<int>("UserLevel")
                        .HasColumnType("int")
                        .HasColumnName("UserLevel")
                        .HasComment("用户权限等级");

                    b.Property<string>("UserLevelName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserLevelName")
                        .HasComment("用户权限等级名称");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UserName")
                        .HasComment("用户名称");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UserPassword")
                        .HasComment("用户密码");

                    b.HasKey("ID");

                    b.ToTable("UserInfo", t =>
                        {
                            t.HasComment("用户信息表");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
